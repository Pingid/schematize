0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@3.3.6
3 info using node@v5.0.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/dan/Documents/projects/web/current/schematizr',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/dan/.npm/schematizr/2.1.0/package.tgz not in flight; packing
9 info lifecycle schematizr@2.1.0~prepublish: schematizr@2.1.0
10 silly lifecycle schematizr@2.1.0~prepublish: no script for prepublish, continuing
11 verbose tar pack [ '/Users/dan/.npm/schematizr/2.1.0/package.tgz',
11 verbose tar pack   '/Users/dan/Documents/projects/web/current/schematizr' ]
12 verbose tarball /Users/dan/.npm/schematizr/2.1.0/package.tgz
13 verbose folder /Users/dan/Documents/projects/web/current/schematizr
14 verbose addLocalTarball adding from inside cache /Users/dan/.npm/schematizr/2.1.0/package.tgz
15 silly cache afterAdd schematizr@2.1.0
16 verbose afterAdd /Users/dan/.npm/schematizr/2.1.0/package/package.json not in flight; writing
17 verbose afterAdd /Users/dan/.npm/schematizr/2.1.0/package/package.json written
18 silly publish { name: 'schematizr',
18 silly publish   version: '2.1.0',
18 silly publish   description: 'A functional library which converts deeply nested JSON to a schema which is easily editable.',
18 silly publish   main: 'lib/schema.js',
18 silly publish   dependencies: { ramda: '0.19.1' },
18 silly publish   devDependencies:
18 silly publish    { 'babel-cli': '6.4.5',
18 silly publish      'babel-preset-es2015': '6.3.13',
18 silly publish      'babel-preset-stage-0': '6.3.13',
18 silly publish      chai: '3.4.1',
18 silly publish      mocha: '2.3.4' },
18 silly publish   scripts:
18 silly publish    { prebuild: 'rm -rf lib && mkdir lib',
18 silly publish      build: 'babel --presets es2015,stage-0 -d lib/ src/',
18 silly publish      'build-watch': 'babel --watch --presets es2015,stage-0 -d lib/ src/',
18 silly publish      test: 'mocha test/index.js',
18 silly publish      testing: 'mocha test/index.js -w' },
18 silly publish   repository:
18 silly publish    { type: 'git',
18 silly publish      url: 'git+https://github.com/Pingid/schematizr.git' },
18 silly publish   author:
18 silly publish    { name: 'Dan Beaven',
18 silly publish      email: 'dm.beaven@gmail.com',
18 silly publish      url: 'http://danbeaven.co.uk' },
18 silly publish   license: 'MIT',
18 silly publish   bugs: { url: 'https://github.com/Pingid/schematizr/issues' },
18 silly publish   homepage: 'https://github.com/Pingid/schematizr#readme',
18 silly publish   readme: '# schematizr\nSchematisr is a lightweight library designed to help you modify deeply nested json. The api is purposely small, each function is curried making it easy to extend the library with functions more spesific to your project.\n\n## Installation\n\n```\nnpm install --save schematizr\n```\n\n## Usage\n\n```javascript\nimport { assemble, disassemble, findById, find, filter } from \'schematizr\';\n```\n\nExample data:\n\n```javascript\nconst data = {\n  todoList: [\n    {  text: \'Exercise\',\n      subList: [\n        { text: \'5k run\' },\n        { test: \'30min stretch\' }\n      ]\n    },\n    { text: \'Trim nose hairs\' }\n  ]\n}\n```\n\nConvert the JSON into a the schema:\n\n### `assemble(nestedJson)`\n\n```javascript\nconst schema = assemble(data);\n\n// { todoList: [\n//     { _id: 1,\n//       text: \'Exercise\',\n//       subList: [\n//         { _id: 2,\n//           text: \'5k run\' },\n//         { _id: 3,\n//           test: \'30min stretch\' }\n//       ]\n//     },\n//     { _id: 4,\n//       text: \'Trim nose hairs\' }\n//   ]\n// }\n```\n\nThen we can access the different objects by using their unique id:\n\n### `findById(callback, schema, id)`\n\n```javascript\nconst increasedRun = findById(function(object) {\n  return Object.assign({}, object, {\n    text: \'100k run\'\n  })\n}, schema, 2)\n\n// { todoList: [\n//     { _id: 1,\n//       text: \'Exercise\',\n//       subList: [\n//         { _id: 2,\n//           text: \'100k run\' },\n//         { _id: 3,\n//           test: \'30min stretch\' }\n//       ]\n//     },\n//     { _id: 4,\n//       text: \'Trim nose hairs\' }\n//   ]\n// }\n```\nDisassemble removes id\'s and outputs schema to original structure:\n\n### `disassemble(schema)`\n\n```javascript\nconst out = disassemble(increasedRun)\n\n// { todoList: [\n//     { text: \'Exercise\',\n//       subList: [\n//         { text: \'100krun run\' },\n//         { test: \'30min stretch\' }\n//       ]\n//     },\n//     { text: \'Trim nose hairs\' }\n//   ]\n// }\n```\n\nWe also have find, which works on any nested JSON and return for any value or object:\n\n### `find(callback, nestedObject, findShape)`\n\n```javascript\nconst increasedStretch = Find(function(object) {\n  return { test: \'60min stretch\' }\n}, data, { test: \'30min stretch\' })\n\n// { todoList: [\n//     { text: \'Exercise\',\n//       subList: [\n//         { text: \'5k run\' },\n//         { test: \'60min stretch\' }\n//       ]\n//     },\n//     { text: \'Trim nose hairs\' }\n//   ]\n// }\n```\n\nFilter takes a callback which gets all the values from the nested json and returns a boolean\n\n### `filter(callback, nestedObject)`\n\n```javascript\nconst removeRun = filter(function(value) {\n  return value !== \'5k run\'\n})\n// { todoList: [\n//     { text: \'Exercise\',\n//       subList: [\n//         { test: \'30min stretch\' }\n//       ]\n//     },\n//     { text: \'Trim nose hairs\' }\n//   ]\n// }\n```\n\nCurried Example:\n\n```javascript\nconst removeById = findById(function(object) {\n  return null\n}, schema)\n\nconst removedNoseTrimming = removeById(4)\n// { todoList: [\n//     { text: \'Exercise\',\n//       subList: [\n//         { text: \'5k run\' },\n//         { test: \'30min stretch\' }\n//       ]\n//     }\n//   ]\n// }\n\n```\n',
18 silly publish   readmeFilename: 'README.md',
18 silly publish   gitHead: '2d7805c30ba4d241ca5d4c309b348d1eb4fe9630',
18 silly publish   _id: 'schematizr@2.1.0',
18 silly publish   _shasum: '3dcddb597c6650e36750fe748e06cd40fbcdbe9f',
18 silly publish   _from: '.' }
19 verbose getPublishConfig undefined
20 silly mapToRegistry name schematizr
21 silly mapToRegistry using default registry
22 silly mapToRegistry registry https://registry.npmjs.org/
23 silly mapToRegistry uri https://registry.npmjs.org/schematizr
24 verbose publish registryBase https://registry.npmjs.org/
25 silly publish uploading /Users/dan/.npm/schematizr/2.1.0/package.tgz
26 verbose request uri https://registry.npmjs.org/schematizr
27 verbose request sending authorization for write operation
28 info attempt registry request try #1 at 5:53:37 PM
29 verbose request using bearer token for auth
30 verbose request id 08d8512c847097f4
31 http request PUT https://registry.npmjs.org/schematizr
32 http 403 https://registry.npmjs.org/schematizr
33 verbose headers { 'content-type': 'application/json',
33 verbose headers   'cache-control': 'max-age=300',
33 verbose headers   'content-length': '95',
33 verbose headers   'accept-ranges': 'bytes',
33 verbose headers   date: 'Thu, 28 Jan 2016 17:53:39 GMT',
33 verbose headers   via: '1.1 varnish',
33 verbose headers   connection: 'keep-alive',
33 verbose headers   'x-served-by': 'cache-lcy1135-LCY',
33 verbose headers   'x-cache': 'MISS',
33 verbose headers   'x-cache-hits': '0',
33 verbose headers   'x-timer': 'S1454003618.165139,VS0,VE1193' }
34 verbose request invalidating /Users/dan/.npm/registry.npmjs.org/schematizr on PUT
35 error publish Failed PUT 403
36 verbose stack Error: "You cannot publish over the previously published version 2.1.0." : schematizr
36 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
36 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
36 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
36 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:198:22)
36 verbose stack     at emitTwo (events.js:87:13)
36 verbose stack     at Request.emit (events.js:172:7)
36 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1063:14)
36 verbose stack     at emitOne (events.js:82:20)
36 verbose stack     at Request.emit (events.js:169:7)
36 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1009:12)
37 verbose statusCode 403
38 verbose pkgid schematizr
39 verbose cwd /Users/dan/Documents/projects/web/current/schematizr
40 error Darwin 15.2.0
41 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
42 error node v5.0.0
43 error npm  v3.3.6
44 error code E403
45 error "You cannot publish over the previously published version 2.1.0." : schematizr
46 error If you need help, you may report this error at:
46 error     <https://github.com/npm/npm/issues>
47 verbose exit [ 1, true ]
